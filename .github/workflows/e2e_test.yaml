name: e2e_test on e2e-test branch

on:
  workflow_dispatch:
    branch: e2e-test

jobs:
  # The job builds the cicd version of secondary server image and pushes to GitHub registry
  run_end2end_tests:
    # Runs only after functional tests are completed.
    # needs: [ run_functional_test ]
    # env:
    #  working-directory: at_server
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      # Extract branch for docker tag

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.5.0

      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Builds and pushes the secondary server image to docker hub.
      - name: Build and push secondary image for arm64
        id: docker_build_secondary
        uses: docker/build-push-action@v2.6.1
        with:
          push: true
          context: at_secondary
          tags: |
            atsigncompany/secondary:dess_cicd
            atsigncompany/secondary:cicd-${{ env.BRANCH }}-gha${{ github.run_number }}
          platforms: |
            linux/arm64/v8

      # Logs into CICD VMs and runs script to update to just pushed image
      - name: update image on cicd VMs
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: "cicd1.atsign.wtf,cicd2.atsign.wtf"
          username: ubuntu
          key: ${{ secrets.CICD_SSH_KEY }}
          script: |
            ./update_image.sh

      - name: Install dependencies
        working-directory: at_functional_test
        run: dart pub get

      # Create demo_data.dart from CICD_DATA_DART secret
      - name: Get CICD keys into place
        run: echo "${{secrets.CICD_DATA_DART}}" > at_functional_test/test/at_demo_data.dart

      # Run end to end test
      - name: End to end test
        working-directory: at_functional_test
        run: dart run test test/update_verb_test.dart